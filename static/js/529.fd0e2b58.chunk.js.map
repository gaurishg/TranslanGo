{"version":3,"file":"static/js/529.fd0e2b58.chunk.js","mappings":"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","sources":["components/selectLanguage.tsx","pages/select-languages/SelectLanguagesPage.tsx","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@mui/material/FormGroup/formGroupClasses.js","../node_modules/@mui/material/FormGroup/FormGroup.js","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js"],"sourcesContent":["import { FormControl, FormLabel, MenuItem } from \"@mui/material\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport { useContext } from \"react\";\r\nimport AppCtx, {\r\n  AppCtxUpdater,\r\n  TRANSLATION_KEYS,\r\n} from \"../store/app-state-context\";\r\n\r\nexport const uiLanguages = [\r\n  { value: \"ar\", text: \"عربى\" },\r\n  { value: \"en\", text: \"English\" },\r\n  { value: \"es\", text: \"español\" },\r\n  { value: \"fr\", text: \"française\" },\r\n  { value: \"hi\", text: \"हिन्दी\" },\r\n  { value: \"ja\", text: \"日本語\" },\r\n  { value: \"zh\", text: \"中文\" },\r\n];\r\n\r\nexport default function SelectLanguage() {\r\n  // It is a hook imported from 'react-i18next'\r\n  // const { t } = useTranslation();\r\n  const ctx = useContext(AppCtx);\r\n  const ctxUpdater = useContext(AppCtxUpdater);\r\n  const t = (key: TRANSLATION_KEYS) =>\r\n    ctx.translations[ctx.nativeLanguage]\r\n      ? ctx.translations[ctx.nativeLanguage][key]\r\n      : ctx.translations[\"en\"][key];\r\n\r\n  const handleChange = (event: SelectChangeEvent) => {\r\n    ctx.nativeLanguage = event.target.value;\r\n    ctxUpdater({ ...ctx });\r\n  };\r\n\r\n  return (\r\n    <FormControl sx={{ m: 1, minWidth: 120 }} size=\"small\">\r\n      <FormLabel>{t(\"SELECT_NATIVE_LANG\")}</FormLabel>\r\n      <Select\r\n        value={ctx.nativeLanguage}\r\n        onChange={handleChange}\r\n        displayEmpty\r\n        inputProps={{ \"aria-label\": \"Without label\" }}\r\n        labelId=\"demo-simple-select-autowidth-label\"\r\n        id=\"demo-simple-select-autowidth\"\r\n        sx={{\r\n          bgcolor: \"white\",\r\n          color: \"primary\",\r\n        }}\r\n      >\r\n        {uiLanguages.map((item) => {\r\n          return (\r\n            <MenuItem key={item.value} value={item.value}>\r\n              {item.text}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Checkbox,\r\n  FormControl,\r\n  FormGroup,\r\n  Stack,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { ChangeEvent, useContext, useState } from \"react\";\r\nimport FillPageWithSidePic from \"../../components/FillPageWithSidePic\";\r\nimport SelectLanguage from \"../../components/selectLanguage\";\r\nimport TopNavigation from \"../../components/TopNavigation\";\r\nimport AppCtx, {\r\n  AppCtxUpdater,\r\n  TRANSLATION_KEYS,\r\n} from \"../../store/app-state-context\";\r\n\r\nconst SelectLanguagesPage: React.FC = () => {\r\n  const ctx = useContext(AppCtx);\r\n  const ctxUpdater = useContext(AppCtxUpdater);\r\n  const t = (key: TRANSLATION_KEYS) =>\r\n    ctx.translations[ctx.nativeLanguage]\r\n      ? ctx.translations[ctx.nativeLanguage][key]\r\n      : ctx.translations[\"en\"][key];\r\n\r\n  const [filterText, setFilterText] = useState(\"\");\r\n  const [filteredLanguages, setFilteredLanguages] = useState(\r\n    Object.entries(ctx.availableLanguages).filter(([_code, name]) =>\r\n      name.toLocaleLowerCase().includes(filterText)\r\n    )\r\n  );\r\n\r\n  const languageFilterHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const lowercase_searchTerm = event.target.value.trim().toLocaleLowerCase();\r\n    setFilterText(lowercase_searchTerm);\r\n    setFilteredLanguages(\r\n      Object.entries(ctx.availableLanguages).filter(([_code, name]) =>\r\n        name.toLocaleLowerCase().includes(lowercase_searchTerm)\r\n      )\r\n    );\r\n  };\r\n\r\n  const onCheckboxChanged = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { checked, value } = event.target;\r\n    const lang_code = value;\r\n\r\n    if (checked) {\r\n      ctx.favouriteLanguages.add(lang_code);\r\n    } else {\r\n      ctx.favouriteLanguages.delete(lang_code);\r\n    }\r\n\r\n    ctxUpdater(function (oldCtx) {\r\n      return { ...oldCtx, ...ctx };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <FillPageWithSidePic>\r\n      <Stack>\r\n        <TopNavigation />\r\n        <Stack\r\n          direction=\"row\"\r\n          p={2}\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n        >\r\n          <Typography>{t(\"SELECT_NATIVE_LANG\")}</Typography>\r\n          <SelectLanguage />\r\n        </Stack>\r\n        <Card>\r\n          <CardHeader\r\n            sx={{ color: \"primary.main\" }}\r\n            title={t(\"SELECT_PREFERRED_LANGS\")}\r\n            subheader={t(\"PREFERRED_LANGS_USAGE\")}\r\n          />\r\n          <CardContent\r\n            component=\"form\"\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n            }}\r\n          >\r\n            <Stack spacing={2}>\r\n              <TextField\r\n                fullWidth\r\n                variant=\"standard\"\r\n                value={filterText}\r\n                onChange={languageFilterHandler}\r\n              />\r\n              <FormControl component=\"fieldset\">\r\n                <FormGroup>\r\n                  {filteredLanguages.map(([code, name]) => {\r\n                    return (\r\n                      <Stack\r\n                        key={code}\r\n                        direction=\"row\"\r\n                        justifyContent=\"space-between\"\r\n                        justifyItems=\"center\"\r\n                      >\r\n                        {/* <Stack alignItems=\"center\" direction=\"row\" spacing={2} justifyItems=\"center\"> */}\r\n                        <Typography>{`${name}`}</Typography>\r\n                        {/* </Stack> */}\r\n                        <Checkbox\r\n                          name={name}\r\n                          checked={ctx.favouriteLanguages.has(code)}\r\n                          onChange={onCheckboxChanged}\r\n                          value={code}\r\n                        />\r\n                      </Stack>\r\n                    );\r\n                  })}\r\n                </FormGroup>\r\n              </FormControl>\r\n            </Stack>\r\n          </CardContent>\r\n        </Card>\r\n      </Stack>\r\n    </FillPageWithSidePic>\r\n  );\r\n};\r\n\r\nexport default SelectLanguagesPage;\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nconst formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row', 'error']);\nexport default formGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"row\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport useFormControl from '../FormControl/useFormControl';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    row,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\nconst FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap'\n}, ownerState.row && {\n  flexDirection: 'row'\n}));\n\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n  const {\n      className,\n      row = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    row,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Display group of elements in a compact row.\n   * @default false\n   */\n  row: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormGroup;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;"],"names":["uiLanguages","value","text","SelectLanguage","key","ctx","useContext","AppCtx","ctxUpdater","AppCtxUpdater","sx","m","minWidth","size","translations","nativeLanguage","onChange","event","target","displayEmpty","inputProps","labelId","id","bgcolor","color","map","item","t","useState","filterText","setFilterText","Object","entries","availableLanguages","filter","toLocaleLowerCase","includes","filteredLanguages","setFilteredLanguages","onCheckboxChanged","checked","lang_code","favouriteLanguages","add","delete","oldCtx","direction","p","alignItems","justifyContent","title","subheader","component","onSubmit","e","preventDefault","spacing","fullWidth","variant","lowercase_searchTerm","trim","code","name","justifyItems","has","createSvgIcon","_jsx","d","getCheckboxUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","ownerState","root","indeterminate","capitalize","theme","_extends","vars","palette","secondary","disableRipple","backgroundColor","action","activeChannel","primary","mainChannel","hoverOpacity","alpha","active","main","checkboxClasses","disabled","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","React","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","className","other","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","type","fontSize","clsx","getFormGroupUtilityClass","FormGroupRoot","row","display","flexDirection","flexWrap","muiFormControl","useFormControl","fcs","formControlState","states","error","getSwitchBaseUtilityClass","SwitchBaseRoot","ButtonBase","padding","borderRadius","edge","marginLeft","marginRight","SwitchBaseInput","cursor","position","opacity","width","height","top","left","margin","zIndex","autoFocus","checkedProp","defaultChecked","disabledProp","disableFocusRipple","inputRef","onBlur","onFocus","readOnly","required","tabIndex","useControlled","controlled","default","Boolean","state","setCheckedState","hasLabelFor","input","_jsxs","centerRipple","focusRipple","role","undefined","children","nativeEvent","defaultPrevented","newChecked"],"sourceRoot":""}
{"version":3,"file":"static/js/506.7ffdd7e3.chunk.js","mappings":"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","sources":["controllers/dashboard/dashboard.controller.ts","controllers/user/user.controller.ts","components/singlePost.tsx","pages/previewPost/index.tsx"],"sourcesContent":["import axiosInstance from \"../../constants/common/axios.constants\";\r\n\r\n// --------->>> MAIN CLASS\r\nexport default class DashboardController {\r\n  // ---------> GET: dashboard/main - top\r\n  // ROUTE: /dashboard/top\r\n  // COMMENTS:\r\n  // 1.- TESTED & CONNECTED\r\n  static async getPreferredLanguages() {\r\n    // Call the AXIOS request\r\n    const axiosResponse = await axiosInstance\r\n      .get(\"/dashboard/top\")\r\n      .catch((e) => {\r\n        const JSONError = e.toJSON();\r\n        return JSONError;\r\n      });\r\n    return axiosResponse;\r\n  }\r\n\r\n  // ---------> POST : edit dashboard/top\r\n  // ROUTE: /dashboard/top\r\n  // COMMENTS:\r\n  // 1.- TESTED & CONNECTED\r\n  static async updateUserPreferredLanguages({\r\n    languages,\r\n  }: {\r\n    languages: string[];\r\n  }) {\r\n    // Call the AXIOS request\r\n    const axiosResponse = await axiosInstance\r\n      .post(\"/dashboard/top\", {\r\n        languages,\r\n      })\r\n      .catch((e) => {\r\n        const JSONError = e.toJSON();\r\n        return JSONError;\r\n      });\r\n    return axiosResponse;\r\n  }\r\n\r\n  // ---------> GET : dashboard/histories - list histories\r\n  // ROUTE: /dashboard/histories\r\n  // 1.- TESTED & CONNECTED\r\n  static async getItems() {\r\n    // Call the AXIOS request\r\n    const axiosResponse = await axiosInstance\r\n      .get(\"/dashboard/histories\")\r\n      .catch((e) => {\r\n        const JSONError = e.toJSON();\r\n        return JSONError;\r\n      });\r\n    return axiosResponse;\r\n  }\r\n\r\n  // ---------> POST : dashboard/camera - add history (detect object or text)\r\n  // ROUTE: /dashboard/histories\r\n  // COMMENTS :\r\n  // 1.- TESTED & CONNECTED\r\n  static async translateImageFromUrl({\r\n    type,\r\n    image_url,\r\n    id,\r\n    original,\r\n    target,\r\n  }: {\r\n    type: \"object\" | \"text\";\r\n    image_url?: string;\r\n    id?: string;\r\n    original: { language: string; id: string; text?: string };\r\n    target: { language: string; id: string; text?: string }[];\r\n  }) {\r\n    // Call the AXIOS request\r\n    const axiosResponse = await axiosInstance\r\n      .post(\"/dashboard/histories?type=\" + type, {\r\n        image_url,\r\n        id,\r\n        original,\r\n        target,\r\n      })\r\n      .catch((e) => {\r\n        const JSONError = e.toJSON();\r\n        return JSONError;\r\n      });\r\n    return axiosResponse;\r\n  }\r\n\r\n  // ---------> GET : dashboard/history - one history for object\r\n  // ROUTE: /dashboard/histories/{objectID}\r\n  // 1.- TESTED & CONNECTED\r\n  static async getOneItem({ id }: { id: string }) {\r\n    // Call the AXIOS request\r\n    const axiosResponse = await axiosInstance\r\n      .get(\"/dashboard/histories/\" + id)\r\n      .catch((e) => {\r\n        const JSONError = e.toJSON();\r\n        return JSONError;\r\n      });\r\n    return axiosResponse;\r\n  }\r\n\r\n  // ---------> DELETE : dashboard/history - one history for object\r\n  // ROUTE: /dashboard/histories/{objectID}\r\n  // COMMENTS:\r\n  // 1.- TESTED & CONNECTED\r\n  static async deleteOneItem({ id }: { id: string }) {\r\n    // Call the AXIOS request\r\n    const axiosResponse = await axiosInstance\r\n      .delete(\"/dashboard/histories/\" + id)\r\n      .catch((e) => {\r\n        const JSONError = e.toJSON();\r\n        return JSONError;\r\n      });\r\n    return axiosResponse;\r\n  }\r\n\r\n  // ---------> POST :\r\n  // - dashboard/history - edit liked\r\n  // - dashboard/history - edit caption\r\n  // - dashboard/history - edit num failures\r\n  // - dashboard/history - edit original language\r\n  // ROUTE: /dashboard/histories/{objectID}/edit\r\n  // COMMENTS:\r\n  // 1.- Only one change per call?\r\n  // TESTED & CONNECTED\r\n  // ROUTE: /dashboard/histories/{objectID}\r\n  static async editItem({\r\n    id,\r\n    caption,\r\n    num_failures,\r\n    original,\r\n    liked,\r\n  }: {\r\n    id: string;\r\n    original?: { language: string; id: string; text?: string };\r\n    caption?: string;\r\n    liked?: boolean;\r\n    num_failures?: number;\r\n  }) {\r\n    // Set the editTarget property according to the received items\r\n    const editTarget =\r\n      caption !== undefined\r\n        ? \"caption\"\r\n        : num_failures !== undefined\r\n        ? \"num_failures\"\r\n        : original !== undefined\r\n        ? \"original\"\r\n        : liked !== undefined\r\n        ? \"liked\"\r\n        : \"\";\r\n\r\n    // Call the AXIOS request\r\n    const axiosResponse = await axiosInstance\r\n      .post(\"/dashboard/histories/\" + id + \"/\" + editTarget, {\r\n        caption,\r\n        num_failures,\r\n        original,\r\n        liked,\r\n      })\r\n      .catch((e) => {\r\n        const JSONError = e.toJSON();\r\n        return JSONError;\r\n      });\r\n    return axiosResponse;\r\n  }\r\n\r\n  // ---------> GET : dashboard/list - lists\r\n  // ROUTE: /dashboard/lists\r\n  // COMMENTS:\r\n  // 1.- TESTED & CONNECTED\r\n  static async getLists() {\r\n    // Call the AXIOS request\r\n    const axiosResponse = await axiosInstance\r\n      .get(\"/dashboard/lists\")\r\n      .catch((e) => {\r\n        const JSONError = e.toJSON();\r\n        return JSONError;\r\n      });\r\n    return axiosResponse;\r\n  }\r\n\r\n  // ---------> POST : dashboard/list - add custom list\r\n  // ROUTE: /dashboard/lists\r\n  // COMMENTS:\r\n  // 1.- icon_name is set to icon-name, which cannot be sent as Json from axios\r\n  // 2.- TESTED & CONNECTED\r\n  static async createList({\r\n    id,\r\n    name,\r\n    icon_name,\r\n    objects,\r\n  }: {\r\n    id?: string;\r\n    name: string;\r\n    icon_name: string;\r\n    objects: { id: string }[];\r\n  }) {\r\n    // Call the AXIOS request\r\n    const axiosResponse = await axiosInstance\r\n      .post(\"/dashboard/lists\", { id, name, icon_name, objects })\r\n      .catch((e) => {\r\n        const JSONError = e.toJSON();\r\n        return JSONError;\r\n      });\r\n    return axiosResponse;\r\n  }\r\n\r\n  // ---------> GET : dashboard/list - start game\r\n  // ROUTE: /dashboards/lists/{listID}\r\n  // COMMENTS:\r\n  // 1.- TESTED & CONNECTED\r\n  static async getList({\r\n    id,\r\n    num_questions,\r\n  }: {\r\n    id: string;\r\n    num_questions: number;\r\n  }) {\r\n    // Call the AXIOS request\r\n    const axiosResponse = await axiosInstance\r\n      .get(\"/dashboard/lists/\" + id + '?num_questions=' + num_questions)\r\n      .catch((e) => {\r\n        const JSONError = e.toJSON();\r\n        return JSONError;\r\n      });\r\n    return axiosResponse;\r\n  }\r\n\r\n  // ---------> PUT : dashboard - edit list\r\n  // ROUTE: /dashboards/lists/{listID}\r\n  // COMMENTS:\r\n  // 1.- Request 'objects' property include only an array of ids for the referred items, However, the response should include the entire object.\r\n  // 2.- TESTED & CONNECTED\r\n  static async editList({\r\n    id,\r\n    name,\r\n    icon_name,\r\n    objects,\r\n  }: {\r\n    id: string;\r\n    name: string;\r\n    icon_name: string;\r\n    objects: { id: string }[];\r\n  }) {\r\n    // Call the AXIOS request\r\n    const axiosResponse = await axiosInstance\r\n      .put(\"/dashboard/lists/\" + id, { id, name, icon_name, objects })\r\n      .catch((e) => {\r\n        const JSONError = e.toJSON();\r\n        return JSONError;\r\n      });\r\n    return axiosResponse;\r\n  }\r\n\r\n  // ---------> DELETE : dashboard - delete list\r\n  // ROUTE: /dashboards/lists/{listID}\r\n  // COMMENTS:\r\n  // 1.- TESTED & CONNECTED\r\n  static async deleteList({ id }: { id: string }) {\r\n    // Call the AXIOS request\r\n    const axiosResponse = await axiosInstance\r\n      .delete(\"/dashboard/lists/\" + id)\r\n      .catch((e) => {\r\n        const JSONError = e.toJSON();\r\n        return JSONError;\r\n      });\r\n    return axiosResponse;\r\n  }\r\n}\r\n","import axiosInstance from \"../../constants/common/axios.constants\";\r\n\r\n// --------->>> MAIN CLASS\r\nexport default class UserController {\r\n  // ---------> GET: signup page - list available languages\r\n  // ROUTE: /user/signup\r\n  // COMMENTS :\r\n  // 1.- Skipped as FE will manage this\r\n\r\n  // ---------> POST : signup - register user\r\n  // ROUTE: /user/signup\r\n  // COMMENTS :\r\n  // 1.- ID is not included in the OpenAPI schema, but\r\n  // 2.- Response code 401 is kinda misleading. Maybe it should be put in the login function?\r\n  // 3.- TESTED & CONNECTED\r\n  static async registerUser({\r\n    id,\r\n    email,\r\n    password,\r\n    first_name,\r\n    middle_name,\r\n    last_name,\r\n    username,\r\n    language,\r\n  }: {\r\n    id: string;\r\n    email: string;\r\n    password: string;\r\n    first_name: string;\r\n    middle_name: string;\r\n    last_name: string;\r\n    username: string;\r\n    language: string;\r\n  }) {\r\n    // Call the AXIOS request\r\n    const axiosResponse = await axiosInstance\r\n      .post(\"/user/signup\", {\r\n        id,\r\n        email,\r\n        password,\r\n        first_name,\r\n        middle_name,\r\n        last_name,\r\n        username,\r\n        language,\r\n      })\r\n      .catch((e) => {\r\n        const JSONError = e.toJSON();\r\n        return JSONError;\r\n      });\r\n\r\n    return axiosResponse;\r\n  }\r\n\r\n  // ---------> POST : login - submit email & password\r\n  // ROUTE: /user/login\r\n  // COMMENTS:\r\n  // 1.- Should there be a responseCode for unconfirmed email?\r\n  // 2.- Please check if cookie is being set. Else, consider sending it back as part of the body response setting it manually\r\n  // 3.- TESTED & CONNECTED\r\n  static async login({ email, password }: { email: string; password: string }) {\r\n    // Call the AXIOS request\r\n    const axiosResponse = await axiosInstance\r\n      .post(\"/user/login\", {\r\n        email,\r\n        password,\r\n      })\r\n      .catch((e) => {\r\n        const JSONError = e.toJSON();\r\n        return JSONError;\r\n      });\r\n\r\n    return axiosResponse;\r\n  }\r\n\r\n  // ---------> POST : login - submit email & password\r\n  // ROUTE: /user/logout\r\n  // COMMENTS:\r\n  // 1.- TESTED & CONNECTED\r\n  static async logout() {\r\n    // Call the AXIOS request\r\n    const axiosResponse = await axiosInstance\r\n      .post(\"/user/logout\", {})\r\n      .catch((e) => {\r\n        const JSONError = e.toJSON();\r\n        return JSONError;\r\n      });\r\n\r\n    return axiosResponse;\r\n  }\r\n\r\n  // ---------> GET : user profile - retrieve user profile\r\n  // ROUTE: /user/profile\r\n  // COMMENTS:\r\n  // 1.- TESTED & CONNECTED\r\n  static async getUserProfile() {\r\n    // Call the AXIOS request\r\n    const axiosResponse = await axiosInstance\r\n      .get(\"/user/profile\")\r\n      .catch((e) => {\r\n        const JSONError = e.toJSON();\r\n        return JSONError;\r\n      });\r\n    return axiosResponse;\r\n  }\r\n\r\n  // ---------> POST : edit user profile - edit user profile\r\n  // ROUTE: /user/profile\r\n  // COMMENTS:\r\n  // 1.- Added the user_profile_pic property on the expected response\r\n  // 2.- TESTED & CONNECTED\r\n  static async editUserProfile({\r\n    id,\r\n    email,\r\n    password,\r\n    first_name,\r\n    middle_name,\r\n    last_name,\r\n    username,\r\n    language,\r\n    profile_image,\r\n  }: {\r\n    id: string;\r\n    email: string;\r\n    password: string;\r\n    first_name: string;\r\n    middle_name: string;\r\n    last_name: string;\r\n    username: string;\r\n    language: string;\r\n    profile_image: string;\r\n  }) {\r\n    // Call the AXIOS request\r\n    const axiosResponse = await axiosInstance\r\n      .post(\"/user/profile\", {\r\n        id,\r\n        email,\r\n        password,\r\n        first_name,\r\n        middle_name,\r\n        last_name,\r\n        username,\r\n        language,\r\n        profile_image,\r\n      })\r\n      .catch((e) => {\r\n        const JSONError = e.toJSON();\r\n        return JSONError;\r\n      });\r\n\r\n    return axiosResponse;\r\n  }\r\n}\r\n","import { styled } from \"@mui/material/styles\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport IconButton, { IconButtonProps } from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { red } from \"@mui/material/colors\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport ShareIcon from \"@mui/icons-material/Share\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\nimport DashboardController from \"../controllers/dashboard/dashboard.controller\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport UserController from \"../controllers/user/user.controller\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\ninterface ExpandMoreProps extends IconButtonProps {\r\n  expand: boolean;\r\n}\r\n\r\nconst ExpandMore = styled((props: ExpandMoreProps) => {\r\n  const { expand, ...other } = props;\r\n  return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? \"rotate(0deg)\" : \"rotate(180deg)\",\r\n  marginLeft: \"auto\",\r\n  transition: theme.transitions.create(\"transform\", {\r\n    duration: theme.transitions.duration.shortest,\r\n  }),\r\n}));\r\n\r\nexport default function SinglePost(props: any) {\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [auth, setAuth] = useState(false);\r\n  const [profileURL, setProfileURL] = useState(\"\");\r\n  const [userdata, setUserdata] = useState<null | any>(null);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [photodata, setPhotoData] = useState(\"\");\r\n  const location = useLocation();\r\n\r\n  const getData = () => {\r\n    UserController.getUserProfile()\r\n      .then(async (OpenAPIResponse) => {\r\n        setUserdata(OpenAPIResponse.data);\r\n        // console.log(OpenAPIResponse.data);\r\n      })\r\n      .catch()\r\n      .finally();\r\n\r\n    if (props.photo_id) {\r\n      DashboardController.getOneItem({\r\n        id: props.photo_id,\r\n      }).then((OpenAPIResponse) => {\r\n        console.log(OpenAPIResponse);\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    if (userdata && !auth) {\r\n      if (userdata.id !== \"\") {\r\n        setAuth(true);\r\n      }\r\n\r\n      setUsername(userdata.username);\r\n\r\n      if (userdata.profile_image !== \"select\") {\r\n        setProfileURL(userdata.profile_image);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ maxWidth: 345 }}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar\r\n            sx={{ bgcolor: red[500] }}\r\n            aria-label=\"recipe\"\r\n            src={profileURL}\r\n          />\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title={username}\r\n        subheader={props.date}\r\n      />\r\n      <CardMedia\r\n        component=\"img\"\r\n        height=\"194\"\r\n        image={location.state.rawurl}\r\n        alt=\"A photo\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          This impressive paella is a perfect party dish and a fun meal to cook\r\n          together with your guests. Add 1 cup of frozen peas along with the\r\n          mussels, if you like.\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n        <ExpandMore\r\n          expand={expanded}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </ExpandMore>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography paragraph>Method:</Typography>\r\n          <Typography paragraph>\r\n            Heat 1/2 cup of the broth in a pot until simmering, add saffron and\r\n            set aside for 10 minutes.\r\n          </Typography>\r\n          <Typography paragraph>\r\n            Heat oil in a (14- to 16-inch) paella pan or a large, deep skillet\r\n            over medium-high heat. Add chicken, shrimp and chorizo, and cook,\r\n            stirring occasionally until lightly browned, 6 to 8 minutes.\r\n            Transfer shrimp to a large plate and set aside, leaving chicken and\r\n            chorizo in the pan. Add pimentón, bay leaves, garlic, tomatoes,\r\n            onion, salt and pepper, and cook, stirring often until thickened and\r\n            fragrant, about 10 minutes. Add saffron broth and remaining 4 1/2\r\n            cups chicken broth; bring to a boil.\r\n          </Typography>\r\n          <Typography paragraph>\r\n            Add rice and stir very gently to distribute. Top with artichokes and\r\n            peppers, and cook without stirring, until most of the liquid is\r\n            absorbed, 15 to 18 minutes. Reduce heat to medium-low, add reserved\r\n            shrimp and mussels, tucking them down into the rice, and cook again\r\n            without stirring, until mussels have opened and rice is just tender,\r\n            5 to 7 minutes more. (Discard any mussels that don&apos;t open.)\r\n          </Typography>\r\n          <Typography>\r\n            Set aside off of the heat to let rest for 10 minutes, and then\r\n            serve.\r\n          </Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n","import { Grid } from \"@mui/material\";\r\n\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport TopNavigation from \"../../components/TopNavigation\";\r\nimport SinglePost from \"../../components/singlePost\";\r\n\r\nexport default function PreviewPost() {\r\n  const location = useLocation();\r\n  const { translationID } = useParams();\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{ minHeight: \"80vh\" }}\r\n      >\r\n        <TopNavigation />\r\n        <Grid item xs={3}>\r\n          <SinglePost\r\n            photo_id={translationID}\r\n            photo_url={location.state.rawurl}\r\n            date={new Date().toLocaleString().split(\",\")[0] + \"\"}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n"],"names":["DashboardController","axiosInstance","catch","e","toJSON","axiosResponse","languages","type","image_url","id","original","target","caption","num_failures","liked","editTarget","undefined","name","icon_name","objects","num_questions","UserController","email","password","first_name","middle_name","last_name","username","language","profile_image","ExpandMore","styled","props","expand","other","IconButton","theme","transform","marginLeft","transition","transitions","create","duration","shortest","SinglePost","useState","expanded","setExpanded","auth","setAuth","profileURL","setProfileURL","userdata","setUserdata","setUsername","location","useLocation","useEffect","getUserProfile","then","OpenAPIResponse","data","finally","photo_id","getOneItem","console","log","Card","sx","maxWidth","CardHeader","avatar","Avatar","bgcolor","red","src","action","MoreVert","title","subheader","date","CardMedia","component","height","image","state","rawurl","alt","CardContent","Typography","variant","color","CardActions","disableSpacing","Favorite","Share","onClick","Collapse","in","timeout","unmountOnExit","paragraph","PreviewPost","translationID","useParams","Grid","container","spacing","direction","alignItems","justifyContent","style","minHeight","TopNavigation","item","xs","photo_url","Date","toLocaleString","split"],"sourceRoot":""}
{"version":3,"file":"static/js/633.18e96c11.chunk.js","mappings":"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","sources":["components/Copyright.tsx","components/ToggleSwitch.tsx","pages/viewimage/ViewImagePage.tsx"],"sourcesContent":["import { Link, Typography } from \"@mui/material\";\r\nimport * as React from 'react';\r\n\r\n\r\nexport default function Copyright(props: any) {\r\n    return (\r\n        <Typography variant=\"subtitle1\" align=\"center\" {...props}>\r\n            {'Copyright Â© '}\r\n            <Link color='inherit' href=\"https://localhost:3000\">\r\n                TranslanGo\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}","import { styled } from '@mui/material/styles';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport Switch from '@mui/material/Switch';\r\nimport Stack from '@mui/material/Stack';\r\n// import ViewInArIcon from '@mui/icons-material/ViewInAr';\r\n// import TitleIcon from '@mui/icons-material/Title';\r\n\r\nconst MaterialUISwitch = styled(Switch)(({ theme }) => ({\r\n    width: 80,\r\n    height: 34,\r\n    padding: 7,\r\n    '& .MuiSwitch-switchBase': {\r\n        margin: 1,\r\n        padding: 0,\r\n        transform: 'translateX(6px)',\r\n        '&.Mui-checked': {\r\n            color: '#fff',\r\n            transform: 'translateX(40px)',\r\n            '& .MuiSwitch-thumb:before': {\r\n                backgroundImage: `url(\"data:image/svg+xml,%3Csvg width='25' height='25' viewBox='0 0 25 25' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M21.4031 17.3101C21.4031 17.6901 21.1931 18.0201 20.8731 18.1901L12.9731 22.6301C12.8131 22.7501 12.6131 22.8101 12.4031 22.8101C12.1931 22.8101 11.9931 22.7501 11.8331 22.6301L3.93308 18.1901C3.61308 18.0201 3.40308 17.6901 3.40308 17.3101V8.31006C3.40308 7.93006 3.61308 7.60006 3.93308 7.43006L11.8331 2.99006C11.9931 2.87006 12.1931 2.81006 12.4031 2.81006C12.6131 2.81006 12.8131 2.87006 12.9731 2.99006L20.8731 7.43006C21.1931 7.60006 21.4031 7.93006 21.4031 8.31006V17.3101ZM12.4031 4.96006L6.44308 8.31006L12.4031 11.6601L18.3631 8.31006L12.4031 4.96006ZM5.40308 16.7201L11.4031 20.1001V13.3901L5.40308 10.0201V16.7201ZM19.4031 16.7201V10.0201L13.4031 13.3901V20.1001L19.4031 16.7201Z' fill='white'/%3E%3C/svg%3E\");`,\r\n            },\r\n            '& + .MuiSwitch-track': {\r\n                opacity: 1,\r\n                backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\r\n            },\r\n        },\r\n    },\r\n    '& .MuiSwitch-thumb': {\r\n        backgroundColor: theme.palette.mode === 'dark' ? '#FAEEFC' : '#8338EC',\r\n        width: 32,\r\n        height: 32,\r\n        '&:before': {\r\n            content: \"''\",\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            left: 0,\r\n            top: 0,\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(\"data:image/svg+xml,%3Csvg width='25' height='25' viewBox='0 0 25 25' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M18.9032 4.81006L20.0632 9.16006L19.1032 9.42006C18.6532 8.55006 18.1932 7.68006 17.6632 7.24006C17.1332 6.81006 16.5132 6.81006 15.9032 6.81006H13.4032V17.3101C13.4032 17.8101 13.4032 18.3101 13.7332 18.5601C14.0732 18.8101 14.7332 18.8101 15.4032 18.8101V19.8101H9.40316V18.8101C10.0732 18.8101 10.7332 18.8101 11.0732 18.5601C11.4032 18.3101 11.4032 17.8101 11.4032 17.3101V6.81006H8.90316C8.29316 6.81006 7.67316 6.81006 7.14316 7.24006C6.61316 7.68006 6.15316 8.55006 5.70316 9.42006L4.74316 9.16006L5.90316 4.81006H18.9032Z' fill='white'/%3E%3C/svg%3E%0A\");`,\r\n        },\r\n    },\r\n    '& .MuiSwitch-track': {\r\n        opacity: 1,\r\n        backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\r\n        borderRadius: 20 / 2,\r\n    },\r\n}));\r\n\r\n// function SwitchThumb(props: any) {\r\n//     return (\r\n//         <div className={`switch ${props.isChecked ? 'checked' : 'unchecked'}`}>\r\n//             {props.isChecked ? <ViewInArIcon /> : <TitleIcon />}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\ninterface Props {\r\n    name: string;\r\n    onChange: (event: React.ChangeEvent<HTMLInputElement>, checked: boolean) => void\r\n}\r\n\r\nconst ToggleSwitch: React.FC<Props> = ({onChange}) => {\r\n    return (\r\n        <FormGroup>\r\n            <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n                {/* <span></span> */}\r\n                {/* <Typography>Text</Typography> */}\r\n                <MaterialUISwitch sx={{ m: 1 }} defaultChecked onChange={onChange} />\r\n                {/* <Typography>Objects</Typography> */}\r\n            </Stack>\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nexport default ToggleSwitch;","import {\r\n  Button,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Stack,\r\n} from \"@mui/material\";\r\nimport { Card, CardMedia } from \"@mui/material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport ToggleSwitch from \"../../components/ToggleSwitch\";\r\nimport TopNavigation from \"../../components/TopNavigation\";\r\nimport Copyright from \"../../components/Copyright\";\r\nimport GeneralController from \"../../controllers/general.controller\";\r\nimport AppCtx, { TRANSLATION_KEYS } from \"../../store/app-state-context\";\r\nimport { ObjectDetectionFromImageResponseType } from \"../../types/common/common.types\";\r\n\r\n// background: 'linear-gradient(to right bottom, #430089, #82ffa1)'\r\nexport default function PreviewImage() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const ctx = useContext(AppCtx);\r\n  const [rawurl, setRawURL] = useState(\"\");\r\n  const [imgObj, setImgObj] = useState(new File([], \"tempfile\"));\r\n  const [toggledObject, setToggledObject] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [apiResponse, setApiResponse] =\r\n    useState<ObjectDetectionFromImageResponseType>({\r\n      image_name: \"\",\r\n      detections: [],\r\n    });\r\n  const [detectionsReady, setDetectionsReady] = useState(false);\r\n  const t = (key: TRANSLATION_KEYS) =>\r\n    ctx.translations[ctx.nativeLanguage]\r\n      ? ctx.translations[ctx.nativeLanguage][key]\r\n      : ctx.translations[\"en\"][key];\r\n  /**\r\n   * On first load check that if user has directly come to this page,\r\n   * It means that the page does not have any state,\r\n   * So, navigate to home page\r\n   */\r\n  useEffect(() => {\r\n    if (!location.state) {\r\n      navigate(\"/\");\r\n    } else {\r\n      setRawURL(location.state.rawurl);\r\n      setImgObj(location.state.img);\r\n    }\r\n  }, []);\r\n\r\n  const handleToggle = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setToggledObject(event.target.checked);\r\n  };\r\n\r\n  const changeImage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (!event.target.files || !event.target.files[0]) return;\r\n    event.persist();\r\n    const file = event.target.files[0];\r\n\r\n    setRawURL(URL.createObjectURL(file));\r\n    setImgObj(file);\r\n    setDetectionsReady(false);\r\n  };\r\n\r\n  const goScan = async (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    event.preventDefault();\r\n\r\n    if (toggledObject === true) {\r\n      setIsLoading(true);\r\n      const data = await GeneralController.getDetectionsInImage(\r\n        imgObj,\r\n        Array.from(ctx.favouriteLanguages),\r\n        ctx.nativeLanguage\r\n      );\r\n      setApiResponse(data);\r\n      setIsLoading(false);\r\n      setDetectionsReady(true);\r\n    } else {\r\n      navigate(\"/scantext\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TopNavigation />\r\n      <Card\r\n        sx={{\r\n          minWidth: \"345px\",\r\n          m: 2,\r\n          display: \"block\",\r\n        }}\r\n        component=\"form\"\r\n      >\r\n        <CardHeader\r\n          action={<ToggleSwitch name=\"toggleObject\" onChange={handleToggle} />}\r\n          titleTypographyProps={{ variant: \"body1\", align: \"left\" }}\r\n          subheaderTypographyProps={{ variant: \"caption\", align: \"left\" }}\r\n          title={t(\"READY_TO_SCAN\")}\r\n          subheader={t(\"CHOOSE_TEXT_OR_OBJECT_DETECTION\")}\r\n        />\r\n        <CardMedia\r\n          component=\"img\"\r\n          // height=\"400\"\r\n          image={rawurl}\r\n          alt=\"A Photo\"\r\n          sx={{ padding: \"1em 1em 0 1em\", objectFit: \"contain\" }}\r\n        />\r\n        <CardActions sx={{ m: 2, display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          <Button\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            component=\"label\"\r\n            sx={{ m: 2 }}\r\n          >\r\n            <input\r\n              style={{ display: \"none\" }}\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              onChange={changeImage}\r\n            />\r\n            {t(\"CHANGE_PICTURE\")}\r\n          </Button>\r\n          <LoadingButton\r\n            size=\"small\"\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            loading={isLoading}\r\n            onClick={goScan}\r\n          >\r\n            {t(\"SCAN\")}\r\n          </LoadingButton>\r\n        </CardActions>\r\n      </Card>\r\n      {detectionsReady &&\r\n        apiResponse.detections.map((detectionWithTranslation) => {\r\n          return (\r\n            <Card\r\n              sx={{\r\n                m: 2,\r\n              }}\r\n              key={`${detectionWithTranslation.mid}${detectionWithTranslation.translatedName}${detectionWithTranslation.score}`}\r\n            >\r\n              <CardHeader title={detectionWithTranslation.translatedName} />\r\n              <CardContent>\r\n                <List\r\n                  component={Stack}\r\n                  direction=\"row\"\r\n                  overflow=\"auto\"\r\n                  divider={<Divider orientation=\"vertical\" flexItem />}\r\n                >\r\n                  {detectionWithTranslation.translations.map((trans) => {\r\n                    return (\r\n                      <ListItem key={trans.language}>\r\n                        <ListItemText\r\n                          primary={trans.translation}\r\n                          secondary={ctx.availableLanguages[trans.language]}\r\n                        />\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </List>\r\n              </CardContent>\r\n            </Card>\r\n          );\r\n        })}\r\n      <Copyright sx={{ mt: 5, color: \"purple\" }} />\r\n    </>\r\n  );\r\n}\r\n"],"names":["Copyright","props","variant","align","color","href","Date","getFullYear","MaterialUISwitch","styled","Switch","theme","width","height","padding","margin","transform","backgroundImage","opacity","backgroundColor","palette","mode","content","position","left","top","backgroundRepeat","backgroundPosition","borderRadius","onChange","FormGroup","Stack","direction","spacing","alignItems","sx","m","defaultChecked","PreviewImage","location","useLocation","navigate","useNavigate","ctx","useContext","AppCtx","useState","rawurl","setRawURL","File","imgObj","setImgObj","toggledObject","setToggledObject","isLoading","setIsLoading","image_name","detections","apiResponse","setApiResponse","detectionsReady","setDetectionsReady","t","key","translations","nativeLanguage","useEffect","state","img","goScan","event","preventDefault","GeneralController","Array","from","favouriteLanguages","data","TopNavigation","Card","minWidth","display","component","CardHeader","action","name","target","checked","titleTypographyProps","subheaderTypographyProps","title","subheader","CardMedia","image","alt","objectFit","CardActions","justifyContent","Button","size","style","type","accept","files","persist","file","URL","createObjectURL","LoadingButton","loading","onClick","map","detectionWithTranslation","translatedName","CardContent","List","overflow","divider","Divider","orientation","flexItem","trans","ListItem","ListItemText","primary","translation","secondary","availableLanguages","language","mid","score","mt"],"sourceRoot":""}